name: Main

on:
  schedule:
    - cron: '0 4 * * 1,2,3,4,5'
  push:
    branches:
      - master
      - main
      - releases/*
    tags:
      - v*

  pull_request:
    branches:
      - master
      - main
      - releases/*


permissions:
  contents: write
  checks: write
  actions: read

jobs:
  main:
    steps:
      # Check out
      - name: Checkout - Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      # Checkout GitHub Actions
      - name: Checkout - Actions
        uses: actions/checkout@v4
        with:
          repository: kestra-io/actions
          sparse-checkout-cone-mode: true
          path: actions
          sparse-checkout: |
            .github/actions

      # Setup build
      - name: Setup - Build
        uses: ./actions/.github/actions/setup-build
        id: build
        with:
          java-enabled: true

      # Setup for unit test
      - name: Setup - Secret to Env
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      # Auth to google with github are required for com.google.cloud.artifactregistry.gradle-plugin
      - name: GCP - Auth with github service account
        uses: 'google-github-actions/auth@v2'
        if: ${{ inputs.sonatype-publish == false }}
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Clean Up - Pre-release
      - name: Clean Up - Pre-release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        shell: bash
        run: |
          echo "--- Preparing for release ---"
          echo "Removing test certificate directory..."
          sudo rm -rf certs
          echo "---------------------------"

      # Publish
      - name: Publish - Release package with Gradle
        shell: bash
        if: ${{ inputs.sonatype-publish == false && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) }}
        run: ./gradlew publish

      - name: Publish - Release package to Maven Central
        if: ${{ inputs.sonatype-publish == true && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USER }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_KEYID: ${{ secrets.SONATYPE_GPG_KEYID }}
          SONATYPE_GPG_PASSWORD: ${{ secrets.SONATYPE_GPG_PASSWORD }}
          SONATYPE_GPG_FILE: ${{ secrets.SONATYPE_GPG_FILE }}
        run: |
          echo "signing.keyId=${SONATYPE_GPG_KEYID}" > ~/.gradle/gradle.properties
          echo "signing.password=${SONATYPE_GPG_PASSWORD}" >> ~/.gradle/gradle.properties
          echo "signing.secretKeyRingFile=${HOME}/.gradle/secring.gpg" >> ~/.gradle/gradle.properties
          echo ${SONATYPE_GPG_FILE} | base64 -d > ~/.gradle/secring.gpg
          ./gradlew publishToMavenCentral

      # GitHub Release
      - name: Create GitHub release
        uses: ./actions/.github/actions/github-release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_RELEASES_WEBHOOK_URL: ${{ secrets.SLACK_RELEASES_WEBHOOK_URL }}


      # GCP
      - name: GCP - Auth with unit test account
        id: auth
        if: ${{ always() && env.GOOGLE_SERVICE_ACCOUNT != '' }}
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT }}'

      - name: GCP - Setup Cloud SDK
        if: ${{ env.GOOGLE_SERVICE_ACCOUNT != '' && inputs.skip-test == false }}
        uses: 'google-github-actions/setup-gcloud@v2'

      # Slack
      - name: Slack - Notification
        uses: 8398a7/action-slack@v3
        if: ${{ always() && env.SLACK_WEBHOOK_URL != '' }}
        with:
          status: ${{ job.status }}
          job_name: Main
          fields: repo,ref,commit,author,workflow,took
          username: GitHub Actions
          icon_emoji: ':github-actions:'
          channel: 'C02DQ1A7JLR'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack - Notify failed CI
        id: send-ci-failed
        if: always() && env.SLACK_WEBHOOK_URL != '' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && job.status == 'failure'
        uses: ./actions/.github/actions/send-ci-failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}